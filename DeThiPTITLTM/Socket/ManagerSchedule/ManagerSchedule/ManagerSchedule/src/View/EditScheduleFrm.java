/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ScheduleDAO;
import Model.Room;
import Model.Schedule;
import java.sql.Time;
import java.util.Calendar;
import java.sql.Date;
import javax.swing.JOptionPane;



/**
 *
 * @author nguye
 */
public class EditScheduleFrm extends javax.swing.JFrame {

    /**
     * Creates new form EditScheduleFrm
     */
    private Schedule schedule = null;
    private Room[] listRoom = null;
    public EditScheduleFrm() {
        initComponents();
    }
    public EditScheduleFrm(Schedule schedule)
    {
        initComponents();
        this.schedule = schedule;
        txtSchedule.setText(String.valueOf(schedule.getId()));
        txtFilmName.setText(schedule.getFilm().getName());
        
        cbRoom.removeAllItems();
        ScheduleDAO sche_dao = new ScheduleDAO();
        listRoom = sche_dao.GetAllRoom();
        for(int i = 0; i < listRoom.length; i++)
        {
            cbRoom.addItem(listRoom[i].getName());
            if(listRoom[i].getName().compareTo(schedule.getRoom().getName()) == 1)
            {
                cbRoom.setSelectedIndex(i - 1);
            }
        }
        cbRoom.getSelectedItem();
        Calendar calen = Calendar.getInstance();
        calen.setTime(schedule.getDate());
        
        txtDay.setText(String.valueOf(calen.get(Calendar.DAY_OF_MONTH)));
        txtMonth.setText(String.valueOf(calen.get(Calendar.MONTH)+1));
        txtYear.setText(String.valueOf(calen.get(Calendar.YEAR)));
     
        
        calen.setTime(schedule.getTime());
        
        txtHour.setText(String.valueOf(calen.get(Calendar.HOUR_OF_DAY)));
        txtMinute.setText(String.valueOf(calen.get(Calendar.MINUTE)));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtSchedule = new javax.swing.JTextField();
        txtFilmName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbRoom = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtDay = new javax.swing.JTextField();
        txtMonth = new javax.swing.JTextField();
        txtYear = new javax.swing.JTextField();
        txtMinute = new javax.swing.JTextField();
        txtHour = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ID Suất Chiếu");

        txtSchedule.setEditable(false);

        txtFilmName.setEditable(false);

        jLabel2.setText("Phim");

        jLabel3.setText("Phòng chiếu");

        cbRoom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Thời gian");

        jLabel5.setText("Khung giờ");

        jButton1.setText("Lưu");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Hủy");

        jLabel6.setText("Ngày");

        jLabel7.setText("Tháng");

        jLabel8.setText("Năm");

        jLabel9.setText("Giờ");

        jLabel10.setText("Phút");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtSchedule)
                    .addComponent(txtFilmName)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDay, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addComponent(txtMonth, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(cbRoom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtHour, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel10)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButton2)
                                        .addComponent(txtMinute, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(179, 179, 179)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtFilmName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9)
                    .addComponent(txtHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txtMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(txtDay.getText().equals("") || txtMonth.getText().equals("") || txtYear.getText().equals("") || txtHour.getText().equals("") || txtMinute.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this, "Nhập thiếu dữ liệu khung giờ hoặc thời gian");
            return;
        }
        
        int Day = 0, Month = 0, Year = 0, Hour = 0, Minute = 0;
        //get time from form
        try
        {
            Day = Integer.parseInt(txtDay.getText());
            Month = Integer.parseInt(txtMonth.getText());
            Year = Integer.parseInt(txtYear.getText());
            
        }
        catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(this, "Nhập sai định dạng thời gian");
            return;
        }
        try
        {
            Hour = Integer.parseInt(txtHour.getText());
            Minute = Integer.parseInt(txtMinute.getText());
        }
        catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(this, "Nhập sai định dạng khung giờ");
            return;
        }
        if(Day <= 0 || Day > 31 || Month <=0 || Month > 12 || Year <= 0)
        {
            JOptionPane.showMessageDialog(this, "Nhập sai định dạng thời gian");
            return;
        }
        if(Hour < 0 || Hour > 24 || Minute < 0 || Minute > 60)
        {
            JOptionPane.showMessageDialog(this, "Nhập sai định dạng khung giờ");
            return;
        }
        //get time from sql
        Calendar calen = Calendar.getInstance();
        calen.setTime(this.schedule.getDate());
        int Day_f = calen.get(Calendar.DAY_OF_MONTH);
        int Month_f = calen.get(Calendar.MONTH) + 1;
        int Year_f = calen.get(Calendar.YEAR);
        calen.setTime(this.schedule.getTime());
        int Hour_f = calen.get(Calendar.HOUR_OF_DAY);
        int Minute_f = calen.get(Calendar.MINUTE);
       
        if(this.schedule.getRoom().getName().equals(cbRoom.getSelectedItem().toString()) && Day == Day_f && Month == Month_f && Year == Year_f && Hour == Hour_f && Minute == Minute_f)
        {
            JOptionPane.showMessageDialog(this, "Chưa chỉnh sửa lịch chiếu");
            return;
        }
        calen.set(Integer.parseInt(txtYear.getText()), Integer.parseInt(txtMonth.getText()) - 1, Integer.parseInt(txtDay.getText()), Integer.parseInt(txtHour.getText()), Integer.parseInt(txtMinute.getText()),0);
        Time time = new Time(calen.get(Calendar.HOUR_OF_DAY), calen.get(Calendar.MINUTE), 0);

        java.util.Date utilDate = calen.getTime();
        java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());

        this.schedule.setDate(sqlDate);
        this.schedule.setTime(time);
        if(calen.get(Calendar.HOUR_OF_DAY) < 20)
        {
            this.schedule.setPrice(60000);
        }
        else
        {
            this.schedule.setPrice(40000);
        }

        for(int i = 0; i < listRoom.length; i++)
        {
            if(listRoom[i].getName().equals(cbRoom.getSelectedItem().toString()))
            {
                this.schedule.setRoom(listRoom[i]);
            }
        }
        ScheduleDAO sche_dao = new ScheduleDAO();
        if(sche_dao.UpdateSchedule(schedule) == false)
        {
            JOptionPane.showMessageDialog(this, "Lịch chiếu bị trùng");
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Sửa lịch chiếu thành công");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditScheduleFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditScheduleFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditScheduleFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditScheduleFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditScheduleFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbRoom;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtDay;
    private javax.swing.JTextField txtFilmName;
    private javax.swing.JTextField txtHour;
    private javax.swing.JTextField txtMinute;
    private javax.swing.JTextField txtMonth;
    private javax.swing.JTextField txtSchedule;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
}
