package thuchanh.main;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;
import thuchanh.controller.ProductIO;
import thuchanh.model.Product;
import thuchanh.model.ProductType;

public class Menu extends javax.swing.JFrame {

  ProductIO pdio = new ProductIO("product1.txt");
  ProductIO pdio2 = new ProductIO("product2.txt");
  ProductIO pdio3 = new ProductIO("product.txt");
  public ArrayList<Product> lst1 = pdio.read();
  public ArrayList<Product> lst2 = pdio2.read();
  public ArrayList<Product> lst3 = pdio3.read();
  public static boolean runTimer = false;

  /**
   * Creates new form Menu
   */
  public Menu() {
    initComponents();
    setLocationRelativeTo(null);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jScrollPane1 = new javax.swing.JScrollPane();
    txt1 = new javax.swing.JTextArea();
    jScrollPane2 = new javax.swing.JScrollPane();
    txt2 = new javax.swing.JTextArea();
    btnStart = new javax.swing.JButton();
    btnStop = new javax.swing.JButton();
    btnMerge = new javax.swing.JButton();
    stt1 = new javax.swing.JLabel();
    stt2 = new javax.swing.JLabel();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    txt1.setColumns(20);
    txt1.setRows(5);
    jScrollPane1.setViewportView(txt1);

    txt2.setColumns(20);
    txt2.setRows(5);
    jScrollPane2.setViewportView(txt2);

    btnStart.setText("Start");
    btnStart.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnStartActionPerformed(evt);
      }
    });

    btnStop.setText("Stop");
    btnStop.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnStopActionPerformed(evt);
      }
    });

    btnMerge.setText("Merge");
    btnMerge.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnMergeActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGap(27, 27, 27)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
              .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
              .addComponent(stt1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(stt2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
          .addGroup(layout.createSequentialGroup()
            .addGap(91, 91, 91)
            .addComponent(btnStart)
            .addGap(32, 32, 32)
            .addComponent(btnStop)
            .addGap(18, 18, 18)
            .addComponent(btnMerge)))
        .addContainerGap(29, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(stt1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(stt2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(btnStop)
          .addComponent(btnMerge)
          .addComponent(btnStart))
        .addContainerGap(16, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
    runTimer = true;
    Start3();
  }//GEN-LAST:event_btnStartActionPerformed

  private void btnMergeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMergeActionPerformed
    Merge();
  }//GEN-LAST:event_btnMergeActionPerformed

  private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
    runTimer = false;
  }//GEN-LAST:event_btnStopActionPerformed

  public void Merge() {
    Thread3 t3 = new Thread3();
    t3.start();

    Thread4 t4 = new Thread4();
    t4.start();

    JOptionPane.showMessageDialog(rootPane, "Sucess");
  }

  public void Start3() {
    Thread1 t = new Thread1();
    t.start();

    SwingWorker<Void,Void> sw = new Thread2();
    sw.execute();
  }

  public void reset1() {
    txt1.setText("");
    txt2.setText("");
  }

  public class Thread1 extends Thread {

    @Override
    public void run() {
      reset1();
      while (runTimer) {
        for (int i = 0; i < lst1.size(); i++) {
          try {
            Thread.sleep(100);
          } catch (InterruptedException ex) {
          }
          Product pd = lst1.get(i);
          SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
              txt1.append(pd.toString());
            }
          });
          stt1.setText("Reading File...");
          if (i == lst1.size() - 1) {
            stt1.setText("Completed");
            runTimer = false;
            break;
          }
          if (i != lst1.size() && runTimer == false) {
            stt1.setText("Stop File...");
            break;
          }
        }
      }

    }

  }

  public class Thread3 extends Thread {

    @Override
    public void run() {
      String text1 = txt1.getText();
      String arr1[] = text1.split("\n");
      for (String arr11 : arr1) {
        String[] arr2 = arr11.split("-");
        Product pd = new Product();
        pd.setId(arr2[0]);
        pd.setName(arr2[1]);
        pd.setPrice(arr2[2]);
        ProductType pt = new ProductType();
        pt.setId(arr2[3]);
        pd.setPd(pt);
        pdio3.write(pd);
      }
    }
  }

  public class Thread4 extends Thread {

    @Override
    public void run() {
      String text1 = txt2.getText();
      String arr1[] = text1.split("\n");
      for (int i = 0; i < arr1.length; i++) {
        String[] arr2 = arr1[i].split("-");
        Product pd = new Product();
        pd.setId(arr2[0]);
        pd.setName(arr2[1]);
        pd.setPrice(arr2[2]);
        ProductType pt = new ProductType();
        pt.setId(arr2[3]);
        pd.setPd(pt);
        pdio3.write(pd);
      }
    }
  }

  public class Thread2 extends SwingWorker<Void, Void> {

    @Override
    protected Void doInBackground() throws Exception {
      reset1();
      while (runTimer) {
        for (int i = 0; i < lst2.size(); i++) {
          try {
            Thread.sleep(100);
          } catch (InterruptedException ex) {
          }
          Product pd = lst2.get(i);
          SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
              txt2.append(pd.toString());
            }
          });
          stt2.setText("Reading File...");

          if (i == lst2.size() - 1) {
            stt2.setText("Complete.");
            runTimer = false;
            break;
          }
          if (runTimer == false && i != lst2.size() - 1) {
            stt2.setText("Stop File...");
            break;
          }
        }
      }
      return null;
    }

    @Override
    protected void done() {
      System.out.println("done " + isCancelled());
    }
    

  }
  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new Menu().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btnMerge;
  private javax.swing.JButton btnStart;
  private javax.swing.JButton btnStop;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JLabel stt1;
  private javax.swing.JLabel stt2;
  private javax.swing.JTextArea txt1;
  private javax.swing.JTextArea txt2;
  // End of variables declaration//GEN-END:variables
}
